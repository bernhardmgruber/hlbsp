#version 330

uniform mat4 matrix;

out vec3 cubeCoord;

const vec3 points[36] = vec3[](
	// x pos
	vec3( 1000.0, -1000.0,  1000.0),
	vec3( 1000.0, -1000.0, -1000.0),
	vec3( 1000.0,  1000.0,  1000.0),
	vec3( 1000.0,  1000.0, -1000.0),
	vec3( 1000.0,  1000.0,  1000.0),
	vec3( 1000.0, -1000.0, -1000.0),

	// x neg
	vec3(-1000.0, -1000.0, -1000.0),
	vec3(-1000.0, -1000.0,  1000.0),
	vec3(-1000.0,  1000.0, -1000.0),
	vec3(-1000.0,  1000.0,  1000.0),
	vec3(-1000.0,  1000.0, -1000.0),
	vec3(-1000.0, -1000.0,  1000.0),

	// y pos
	vec3( 1000.0,  1000.0, -1000.0),
	vec3(-1000.0,  1000.0, -1000.0),
	vec3( 1000.0,  1000.0,  1000.0),
	vec3(-1000.0,  1000.0,  1000.0),
	vec3( 1000.0,  1000.0,  1000.0),
	vec3(-1000.0,  1000.0, -1000.0),

	// y neg
	vec3(-1000.0, -1000.0,  1000.0),
	vec3(-1000.0, -1000.0, -1000.0),
	vec3( 1000.0, -1000.0, -1000.0),
	vec3(-1000.0, -1000.0,  1000.0),
	vec3( 1000.0, -1000.0, -1000.0),
	vec3( 1000.0, -1000.0,  1000.0),

	// z pos
	vec3(-1000.0,  1000.0,  1000.0),
	vec3(-1000.0, -1000.0,  1000.0),
	vec3( 1000.0,  1000.0,  1000.0),
	vec3( 1000.0, -1000.0,  1000.0),
	vec3( 1000.0,  1000.0,  1000.0),
	vec3(-1000.0, -1000.0,  1000.0),

	// z neg
	vec3(-1000.0, -1000.0, -1000.0),
	vec3(-1000.0,  1000.0, -1000.0),
	vec3( 1000.0, -1000.0, -1000.0),
	vec3( 1000.0,  1000.0, -1000.0),
	vec3( 1000.0, -1000.0, -1000.0),
	vec3(-1000.0,  1000.0, -1000.0)
);

void main() {
	gl_Position = matrix * vec4(points[gl_VertexID], 1.0);
	cubeCoord = points[gl_VertexID];
	cubeCoord.z = -cubeCoord.z;
}
